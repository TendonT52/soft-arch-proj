name: Deploy api-gateway

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "backend/**"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  containerize-api-gateway:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - run: sudo chown runner:docker /var/run/docker.sock
        if: ${{ env.ACT }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install Protobuf Go tools and GRPC-Gateway
        run: |
          go install \
              google.golang.org/protobuf/cmd/protoc-gen-go \
              github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway \
              github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2 \
              google.golang.org/protobuf/cmd/protoc-gen-go \
              google.golang.org/grpc/cmd/protoc-gen-go-grpc
      - name: Install Statik
        run: go install github.com/rakyll/statik
      - name: Run Makefile in api-gateway
        run: make gen-swagger
        working-directory: api-gateway
      - name: Commit files
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Update api-gateway and swagger"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      - name: Application Version
        id: versioning
        uses: paulhatch/semantic-version@v5.1.0
        with:
          namespace: "api-gateway"
          change_path: "backend/**"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend-api-gateway
          tags: |
            ${{ steps.versioning.outputs.version }}
            latest

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:api-gateway"
          tags: |
            ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64/v8
