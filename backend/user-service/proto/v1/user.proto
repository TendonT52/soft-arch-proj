syntax = "proto3";

package user;

option go_package = "github.com/TikhampornSky/go-auth-verifiedMail/gen";
import "google/api/annotations.proto";

service UserService {
    rpc GetStudentMe(GetStudentMeRequest) returns (GetStudentResponse) {
        option (google.api.http) = {
            get: "/v1/student/me"
        };
    }
    rpc GetStudent(GetStudentRequest) returns (GetStudentResponse) {
        option (google.api.http) = {
            get: "/v1/student/{id}"
        };
    }
    rpc UpdateStudent(UpdateStudentRequest) returns (UpdateStudentResponse) {
        option (google.api.http) = {
            put: "/v1/student"
            body: "*"
        };
    }

    rpc GetCompanyMe(GetCompanyMeRequest) returns (GetCompanyResponse) {
        option (google.api.http) = {
            get: "/v1/company/me"
        };
    }
    rpc GetCompany(GetCompanyRequest) returns (GetCompanyResponse) {
        option (google.api.http) = {
            get: "/v1/company/{id}"
        };
    }
    rpc UpdateCompany(UpdateCompanyRequest) returns (UpdateCompanyResponse) {
        option (google.api.http) = {
            put: "/v1/company"
            body: "*"
        };
    }
    rpc ListApprovedCompanies(ListApprovedCompaniesRequest) returns (ListApprovedCompaniesResponse) {
        option (google.api.http) = {
            get: "/v1/companies/approved"
        };
    }

    rpc ListCompanies(ListCompaniesRequest) returns (ListCompaniesResponse) {
        option (google.api.http) = {
            get: "/v1/companies"
        };
    }
    rpc UpdateCompanyStatus(UpdateCompanyStatusRequest) returns (UpdateCompanyStatusResponse) {
        option (google.api.http) = {
            put: "/v1/company/status"
            body: "*"
        };
    }

    rpc DeleteCompanies(DeleteCompaniesRequest) returns (DeleteCompaniesResponse) {}
}

message User {
    int64 id = 1;
    string email = 2;
    string password = 3;
    string role = 4;
    bool verified = 5;
    int64 created_at = 6;
}

message Student {
    int64 id = 1;
    string name = 2;
    string email = 3;
    string description = 4;
    string faculty = 5;
    string major = 6;
    int32 year = 7;
}

message Company {
    int64 id = 1;
    string name = 2;
    string email = 3;
    string description = 4;
    string location = 5;
    string phone = 6;
    string category = 7;
    string status = 8;
}

// Get Student Me
message GetStudentMeRequest {
    string access_token = 1;  // need to set in cookie or authorization header
}

// Get Student
message GetStudentRequest {
    int64 id = 1;
    string access_token = 2;  // need to set in cookie or authorization header
}

message GetStudentResponse {
    int64 status = 1;
    string message = 2;
    Student student = 3;
}

// Update Student
message UpdateStudentRequest {
    string access_token = 1;  // need to set in cookie or authorization header
    Student student = 2;
}

message UpdateStudentResponse {
    int64 status = 1;
    string message = 2;
}

// Get Company Me
message GetCompanyMeRequest {
    string access_token = 1;  // need to set in cookie or authorization header
}

// Get Company
message GetCompanyRequest {
    int64 id = 1;
    string access_token = 2;  // need to set in cookie or authorization header
}

message GetCompanyResponse {
    int64 status = 1;
    string message = 2;
    Company company = 3;
}

// Update Company
message UpdateCompanyRequest {
    string access_token = 1;  // need to set in cookie or authorization header
    Company company = 2;
}

message UpdateCompanyResponse {
    int64 status = 1;
    string message = 2;
}

// List Companies
message ListCompaniesRequest {
    string access_token = 1;  // need to set in cookie or authorization header
}

message ListCompaniesResponse {
    int64 status = 1;
    string message = 2;
    repeated Company companies = 3;
    int64 total = 4;
}

// List Approved Companies
message ListApprovedCompaniesRequest {
    string access_token = 1;   // need to set in cookie or authorization header
    string search = 2;
}

message ListApprovedCompaniesResponse {
    int64 status = 1;
    string message = 2;
    repeated Company companies = 3;
    int64 total = 4;
}

// Approve or Reject Company
message UpdateCompanyStatusRequest {
    string access_token = 1;  // need to set in cookie or authorization header
    int64 id = 2;
    string status = 3;
}

message UpdateCompanyStatusResponse {
    int64 status = 1;
    string message = 2;
}

// Delete Company (Internal Purpose)
message DeleteCompaniesRequest {
    string access_token = 1;  // need to set in cookie or authorization header
}

message DeleteCompaniesResponse {
    int64 status = 1;
    string message = 2;
}